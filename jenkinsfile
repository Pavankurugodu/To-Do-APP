pipeline {
    agent any
    
    environment {
        DOCKER_CREDENTIALS = credentials('docker-credentials')
        GITHUB_TOKEN = credentials('github-token')
        DOCKER_IMAGE = 'pavirocks/todo-app'
    }     
    stages {
        stage ("Clean workspace") {
            steps {
                cleanWs()
            }
        }
        stage ("Git checkout") {
            steps {
                git branch: 'master', url: 'https://github.com/Pavankurugodu/To-Do-APP.git'
            }
        }
        stage('Build and Push Docker Image') {
            steps {
                script {
                    // Calculate version/tag
                    def version = "build-${env.BUILD_NUMBER}"
                    echo "Building version: ${version}"
                    
                    // Build Docker image
                    sh "docker build -t ${env.DOCKER_IMAGE}:build-${env.BUILD_NUMBER} ."

                    
                    // Login to Docker Hub and push
                    withCredentials([usernamePassword(credentialsId: 'docker-credentials', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        sh '''
                            echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
                            docker push ${DOCKER_IMAGE}:build-${BUILD_NUMBER}
                        '''
                    }
                }
            }
        }
        
        stage('Update Kubernetes Manifest') {
             steps {
                 script {
                    //   Calculate previous build number (similar to CircleCI's approach)
                     def previousBuildNum = env.BUILD_NUMBER ? (env.BUILD_NUMBER.toInteger() - 1).toString() : '0'

                     // Clone the manifest repository
                     withCredentials([string(credentialsId: 'github-token', variable: 'GITHUB_TOKEN')]) {
                         sh """
                             git clone https://github.com/Pavankurugodu/To-Do-App-kubernetes.git
                             ls -la  # List files to verify the directory structure
                             cd To-Do-App-kubernetes
                             
                             git config user.email "pavanpavi56@gmail.com"
                             git config user.name "PavanKurugodu"
                            
                             # Update the deployment file with new image tag
                             sed -i "s/build-.*/build-${previousBuildNum}/g" manifest/deployment.yaml

                            
                             # Commit and push changes
                             git add .
                             git commit -m "new build with imgTag build-${previousBuildNum}"
                            
                             git push https://\${GITHUB_TOKEN}@github.com/Pavankurugodu/To-Do-App-kubernetes.git master
                         """
                     }
                 }
             }
         }
     }
    
     post {
         always {
             // Cleanup workspace
             cleanWs()
        }
    }
} 

